EJERCICIO 1.-
 
 
 
CREATE OR REPLACE VIEW VISTA1 AS SELECT ID_PEDIDO, FECHA, DNI, APELLIDOS, CIUDAD FROM PEDIDOS NATURAL JOIN CLIENTES
 
SELECT * FROM VISTA1
SELECT * FROM PEDIDOS
SELECT * FROM CLIENTES
 
INSERT INTO VISTA1 VALUES (6, SYSDATE, '12345678L', 'MARTINEZ', 'MADRID');
DELETE FROM VISTA1 WHERE ID_PEDIDO=6
UPDATE PEDIDOS SET FECHA='01/01/01' WHERE ID_PEDIDO=6
 
 
CREATE OR REPLACE TRIGGER EJ1
INSTEAD OF INSERT OR DELETE OR UPDATE ON VISTA1
FOR EACH ROW
DECLARE
V_DNIEX NUMBER(30,2);
BEGIN
IF INSERTING THEN
SELECT COUNT(*) INTO V_DNIEX FROM CLIENTES WHERE DNI=:NEW.DNI AND APELLIDOS=:NEW.APELLIDOS;
IF V_DNIEX > 0 THEN
INSERT INTO PEDIDOS VALUES (:NEW.ID_PEDIDO, :NEW.FECHA, :NEW.DNI);
ELSE
DBMS_OUTPUT.PUT_LINE('ERROR NO EXISTE EL CLIENTE');
END IF;
END IF;
IF DELETING THEN
DELETE FROM PEDIDOS WHERE ID_PEDIDO=:OLD.ID_PEDIDO;
END IF;
IF UPDATING ('FECHA') THEN
UPDATE PEDIDOS SET FECHA=:NEW.FECHA WHERE ID_PEDIDO=:OLD.ID_PEDIDO;
END IF;
END EJ1;
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
PAQUETE1.-
 
BEGIN PACK1.VER_CLIENTES;END;
BEGIN PACK1.BORRAR_PEDIDO(8);END;
BEGIN PACK1.INSERTAR_PEDIDO('12345678L', 1, 2, 3, 4);END;
SELECT * FROM CLIENTES
SELECT * FROM DETALLES
SELECT * FROM PEDIDOS
SELECT * FROM PRODUCTOS
CREATE OR REPLACE PACKAGE PACK1
AS
TYPE T_TABLA_CLIENTES IS TABLE OF CLIENTES%ROWTYPE INDEX BY BINARY_INTEGER;
PROCEDURE VER_CLIENTES;
PROCEDURE INSERTAR_PEDIDO (D VARCHAR2, ID1 NUMBER DEFAULT NULL, ID2 NUMBER DEFAULT NULL, ID3 NUMBER DEFAULT NULL, ID4 NUMBER DEFAULT NULL, ID5 NUMBER DEFAULT NULL);
PROCEDURE BORRAR_PEDIDO (IDPED NUMBER);
END PACK1;
 
CREATE OR REPLACE PACKAGE BODY PACK1
AS
TAB_CLIENTES T_TABLA_CLIENTES;
PROCEDURE VER_CLIENTES
AS
I NUMBER(2);
CURSOR C1 IS SELECT * FROM CLIENTES;
 
BEGIN
TAB_CLIENTES.DELETE;
I:=0;
FOR V_REG IN C1 LOOP
TAB_CLIENTES(I):=V_REG;
I:=I+1;
END LOOP;
I:=TAB_CLIENTES.FIRST;
WHILE I IS NOT NULL LOOP
DBMS_OUTPUT.PUT_LINE(RPAD(TAB_CLIENTES(I).DNI, 25)|| RPAD(TAB_CLIENTES(I).APELLIDOS, 25) ||TAB_CLIENTES(I).CIUDAD);
I:=TAB_CLIENTES.NEXT(I);
END LOOP;
END VER_CLIENTES;
PROCEDURE INSERTAR_PEDIDO (D VARCHAR2, ID1 NUMBER DEFAULT NULL, ID2 NUMBER DEFAULT NULL, ID3 NUMBER DEFAULT NULL, ID4 NUMBER DEFAULT NULL, ID5 NUMBER DEFAULT NULL)
AS
V_MAXPED NUMBER(30,2);
I NUMBER(30,2);
SUMA1 NUMBER(30,2);
SUMA2 NUMBER(30,2);
SUMA3 NUMBER(30,2);
SUMA4 NUMBER(30,2);
SUMA5 NUMBER(30,2);
BEGIN
SELECT MAX(ID_PEDIDO) INTO V_MAXPED FROM PEDIDOS WHERE DNI=D;
SELECT SUM(PRECIO) INTO SUMA1 FROM PRODUCTOS WHERE ID_PRODUCTO=ID1;
SELECT SUM(PRECIO) INTO SUMA2 FROM PRODUCTOS WHERE ID_PRODUCTO=ID2;
SELECT SUM(PRECIO) INTO SUMA3 FROM PRODUCTOS WHERE ID_PRODUCTO=ID3;
SELECT SUM(PRECIO) INTO SUMA4 FROM PRODUCTOS WHERE ID_PRODUCTO=ID4;
SELECT SUM(PRECIO) INTO SUMA5 FROM PRODUCTOS WHERE ID_PRODUCTO=ID5;
 
INSERT INTO PEDIDOS VALUES (V_MAXPED+1, SYSDATE, D);
IF ID1 IS NOT NULL THEN
INSERT INTO DETALLES VALUES (V_MAXPED+1, ID1, SUMA1);
END IF;
IF ID2 IS NOT NULL THEN
INSERT INTO DETALLES VALUES (V_MAXPED+1, ID2, SUMA2);
END IF;
IF ID3 IS NOT NULL THEN
INSERT INTO DETALLES VALUES (V_MAXPED+1, ID3, SUMA3);
END IF;
IF ID4 IS NOT NULL THEN
INSERT INTO DETALLES VALUES (V_MAXPED+1, ID4, SUMA4);
END IF;
IF ID5 IS NOT NULL THEN
INSERT INTO DETALLES VALUES (V_MAXPED+1, ID5, SUMA5);
END IF;
END INSERTAR_PEDIDO;
PROCEDURE BORRAR_PEDIDO (IDPED NUMBER)
AS
 
 
BEGIN
 
DELETE FROM DETALLES WHERE ID_PEDIDO=IDPED;
DELETE FROM PEDIDOS WHERE ID_PEDIDO=IDPED;
 
END BORRAR_PEDIDO;
 
END PACK1;