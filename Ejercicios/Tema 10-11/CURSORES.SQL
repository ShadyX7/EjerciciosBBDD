--CURSORES
/* HAY QUE DECLARARLOS, ABRIRLOS, RECORRERLOS, Y CERRARLOS*/
DECLARE
 CURSOR curl IS 
  SELECT dnombre, loc FROM depart; --1.Declarar
 v_nombre VARCHAR2(14); --VARIABLES PARA EL FETCH
 v_localidad VARCHAR2(14);
BEGIN
 OPEN curl; --2.Abrir
 LOOP
  FETCH curl INTO v_nombre, v_localidad; --3.Recoger
 EXIT WHEN curl%NOTFOUND;
  DBMS_OUTPUT.PUT_LINE (v_nombre ||'*'||v_localidad);
 END LOOP;
CLOSE curl; --4.Cerrar
END;

-- HACER UN CURSOR QUE MUESTRE APELLIDO, OFICIO Y SALARIO
DECLARE 
 CURSOR CUR1 IS
 SELECT APELLIDO, OFICIO, SALARIO FROM EMPLE;
 V_APELLIDO VARCHAR2(20);
 V_OFICIO VARCHAR2(20);
 V_SALARIO VARCHAR2(10);
BEGIN
 OPEN CUR1;--ABRE
 FETCH CUR1 INTO V_APELLIDO, V_OFICIO, V_SALARIO;--RECOGE UN DATO
 WHILE CUR1%FOUND LOOP
  DBMS_OUTPUT.PUT_LINE(V_APELLIDO||' '||V_OFICIO||' '||V_SALARIO);
  FETCH CUR1 INTO V_APELLIDO, V_OFICIO, V_SALARIO;--RECOGE A TOMAR DATOS
 END LOOP;
 CLOSE CUR1;--CIERRA
END;

--CON LOS TIPOS DE COLUMNA
DECLARE 
 CURSOR CUR1 IS
 SELECT APELLIDO, OFICIO, SALARIO FROM EMPLE;
 V_REG CUR1%ROWTYPE;
BEGIN
 OPEN CUR1;--ABRE
 FETCH CUR1 INTO V_REG;--RECOGE UN DATO
 WHILE CUR1%FOUND LOOP
  DBMS_OUTPUT.PUT_LINE(V_REG.APELLIDO||' '||V_REG.OFICIO||' '||V_REG.SALARIO);
  FETCH CUR1 INTO V_REG;--RECOGE A TOMAR DATOS
 END LOOP;
 CLOSE CUR1;--CIERRA
END;

--OTRA MANERA DE RECORRER 
DECLARE
 CURSOR c1 IS
  SELECT apellido FROM emple WHERE dept_no=20;
  v_apellido VARCHAR2(10);
 BEGIN
  OPEN c1;
 LOOP
  FETCH c1 INTO v_apellido;
   EXIT WHEN c1%NOTFOUND;
   DBMS_OUTPUT.PUT_LINE(TO_CHAR(c1%ROWCOUNT,'99.')||v_apellido);
  
 END LOOP;
 CLOSE C1;
END;


CREATE OR REPLACE PROCEDURE ver_emple_por_dept (dep NUMBER)
AS
 v_dept NUMBER(2);
 CURSOR c1 IS
 SELECT apellido FROM emple WHERE dept_no = v_dept;
 v_apellido VARCHAR2(10);
BEGIN
 v_dept := dep;
OPEN c1;
 FETCH c1 INTO v_apellido;
 WHILE c1%FOUND LOOP
  DBMS_OUTPUT.PUT_LINE(v_apellido);
  FETCH c1 INTO v_apellido;
 END LOOP;
CLOSE c1;
END;

--HALLAR LOS ARTICULOS DE UN FABRICANTE CONOCIDO.
--MTEER LA VARIABLE ANTES, PARA QUE CUANDO EL CURSOR TOME LOS DATOS YA FILTRE
CREATE OR REPLACE PROCEDURE VER_ARTICULOS (COD_FABRI NUMBER)
AS
 V_FABRI NUMBER(20);
 CURSOR c1 IS
 SELECT ARTICULO, PESO, CATEGORIA FROM ARTICULOS WHERE COD_FABRI = V_FABRI;
 V_ARTICULO C1%ROWTYPE;
BEGIN
 V_FABRI := COD_FABRI;
OPEN c1;
 FETCH c1 INTO V_ARTICULO;
 WHILE c1%FOUND LOOP
  DBMS_OUTPUT.PUT_LINE(V_ARTICULO.ARTICULO||' '||V_ARTICULO.PESO||' '||V_ARTICULO.CATEGORIA);
  FETCH c1 INTO V_ARTICULO;
 END LOOP;
CLOSE c1;
END VER_ARTICULOS;

BEGIN VER_ARTICULOS(15); END;



--MOSTRAR LOS DATOS DE LOS EMPLEADOS DE UN DEPARTAMENTO
CREATE OR REPLACE PROCEDURE ver_emple_por_dept (dep NUMBER)
AS
 v_dept NUMBER(2);
 CURSOR c1 IS
 SELECT apellido, OFICIO, SALARIO FROM emple WHERE dept_no = v_dept; --variable de acoplamiento
 v_DATOS C1%ROWTYPE;
BEGIN
 v_dept := dep;--la asignacion.
OPEN c1;
 FETCH c1 INTO v_DATOS;
 WHILE c1%FOUND LOOP
  DBMS_OUTPUT.PUT_LINE(v_DATOS.APELLIDO||' '||V_DATOS.OFICIO||' '||V_DATOS.SALARIO);
  FETCH c1 INTO v_DATOS;
 END LOOP;
CLOSE c1;
END;
BEGIN ver_emple_por_dept(99); END;

/*LIKE PELEAGUDO*/
CREATE OR REPLACE PROCEDURE VER_EMPLE_CHAR(CAD VARCHAR2)
AS 
V_NUM NUMBER(2);
V_CAD VARCHAR2(15);
CURSOR C1 IS
SELECT APELLIDO FROM EMPLE WHERE APELLIDO LIKE V_CAD;
V_APELLIDO VARCHAR2(15);

BEGIN
V_CAD := '%'||CAD||'%';
 OPEN C1;
 FETCH C1 INTO V_APELLIDO;
 WHILE C1%FOUND LOOP
  DBMS_OUTPUT.PUT_LINE(V_APELLIDO);
  FETCH C1 INTO V_APELLIDO;
 END LOOP;
 CLOSE C1;
SELECT COUNT(*) INTO V_NUM FROM EMPLE WHERE APELLIDO LIKE V_CAD;
DBMS_OUTPUT.PUT_LINE(V_NUM);
END;
BEGIN VER_EMPLE_CHAR('EZ'); END;


/*LOOP SIMILAR A UN FOR EACH*/
DECLARE
 CURSOR mi_cursor IS
  SELECT apellido, oficio, comision FROM emple WHERE comision > 500;
 BEGIN
  FOR v_reg IN mi_cursor LOOP
   DBMS_OUTPUT.PUT_LINE(v_reg.apellido||'*'||
   v_reg.oficio||'*'||TO_CHAR(v_reg.comision));
  END LOOP;
END;

CREATE OR REPLACE PROCEDURE VER_SALARIOS
AS
 CURSOR mi_cursor IS
  SELECT DEPT_NO,SUM(SALARIO) SALARIOS FROM emple GROUP BY DEPT_NO;
 BEGIN
  FOR v_reg IN mi_cursor LOOP
   DBMS_OUTPUT.PUT_LINE(v_reg.DEPT_NO||'*'||
   v_reg.SALARIOS);
  END LOOP;
END;
BEGIN VER_SALARIOS(); END;

--PARAMETROS PARA EL CURSOR!!
/* CURSOR C1 (PARAMETRO1 TIPODATO, PARAMETRO2 TIPODATO)
IS
SELECT... WHERE PARAMETRO1 = ... AND PARAMETRO2 = ... */

--Ejercicio
--procedimiento que muestre la clave primaria de la tabla articulos filtrado por fabricante.
CREATE OR REPLACE PROCEDURE VER_ARTI_FABRI(COD NUMBER)
AS
 CURSOR MI_CURSOR(CODI NUMBER) IS
  SELECT ARTICULO, PESO, CATEGORIA FROM ARTICULOS WHERE COD_FABRICANTE = CODI;
 v_DATOS MI_CURSOR%ROWTYPE;
 BEGIN
  OPEN MI_CURSOR(COD);
  FETCH MI_CURSOR INTO v_DATOS;
 WHILE MI_CURSOR%FOUND LOOP
  DBMS_OUTPUT.PUT_LINE(v_DATOS.ARTICULO||' '||v_DATOS.PESO||' '||v_DATOS.CATEGORIA);
  FETCH MI_CURSOR INTO v_DATOS;
 END LOOP;
END;

CREATE OR REPLACE PROCEDURE VER_ARTI_FABRI(COD NUMBER)
AS
 CURSOR MI_CURSOR(CODI NUMBER) IS
  SELECT ARTICULO, PESO, CATEGORIA FROM ARTICULOS WHERE COD_FABRICANTE = CODI;
 BEGIN
  FOR V_DATOS IN MI_CURSOR(COD) LOOP
  DBMS_OUTPUT.PUT_LINE(v_DATOS.ARTICULO||' '||v_DATOS.PESO||' '||v_DATOS.CATEGORIA);
 END LOOP;
END;

BEGIN VER_ARTI_FABRI(10); END;

CREATE OR REPLACE PROCEDURE VER_EMPLEADO(DEPT_NO NUMBER)
AS
 CURSOR MI_CURSOR(CODI NUMBER) IS
  SELECT APELLIDO, OFICIO, SALARIO, COMISION FROM EMPLE WHERE DEPT_NO = CODI;
 BEGIN
  FOR V_DATOS IN MI_CURSOR(DEPT_NO) LOOP
  DBMS_OUTPUT.PUT_LINE(RPAD(V_DATOS.APELLIDO, 15)||' '||RPAD(V_DATOS.OFICIO, 15)||' '||RPAD(V_DATOS.SALARIO, 7)||' '||V_DATOS.COMISION);
 END LOOP;
END;
BEGIN VER_EMPLEADO(30); END;

/***								***/
/*** CURSORES PARA ACTUALIZAR FILAS ***/
/***								***/

CREATE OR REPLACE PROCEDURE subir_salario_dpto( vp_num_dpto NUMBER, vp_pct_subida NUMBER)
AS
 CURSOR c_emple IS SELECT oficio, salario 
  FROM emple WHERE dept_no = vp_num_dpto FOR UPDATE; --FOR UPDATE

 vc_reg_emple c_emple%ROWTYPE;
 v_inc NUMBER(8,2);
BEGIN
 OPEN c_emple;
 FETCH c_emple INTO vc_reg_emple;
 WHILE c_emple%FOUND LOOP
  v_inc := (vc_reg_emple.salario / 100) * vp_pct_subida;
  UPDATE emple SET salario = salario + v_inc WHERE CURRENT OF c_emple; -- (al actual)
  FETCH c_emple INTO vc_reg_emple;
END LOOP;
END subir_salario_dpto;