CREATE OR REPLACE PROCEDURE PRUEBA
AS 
 V_APELLIDO VERCHAR2(10);
BEGIN
 SELECT APELLIDO INTO V_APELLIDO FROM EMPLE WHERE EMP_NO=7369;
 DBMS_OUTPUT.PUT_LINE('El apellido es: ' || V_APELLIDO);
EXCEPTION
 WHEN NO_DATA_FOUND THEN
 DBMS_OUTPUT.PUT_LINE('EMPLEADO NO ENCONTRADO');
END;

DECLARE
v_num_empleados NUMBER(2);
 BEGIN
INSERT INTO depart VALUES (99,'PROVISIONAL',NULL);
UPDATE emple SET dept_no = 99
 WHERE dept_no = 20;
 v_num_empleados := SQL%ROWCOUNT;
DELETE FROM depart
 WHERE dept_no = 20;
DBMS_OUTPUT.PUT_LINE(v_num_empleados ||
' Empleados ubicados en PROVISIONAL');

DECLARE
V_REG_DEPART DEPART%ROWTYPE;
BEGIN
 SELECT * INTO V_REG_DEPART FROM DEPART WHERE DEPT_NO=10;
 DBMS_OUTPUT.PUT_LINE('EL DEPARTAMENTO es: '||V_REG_DEPART.DEPT_NO||'
  '||V_REG_DEPART.DNOMBRE||' '||V_REG_DEPART.LOC);
EXCEPTION
 WHEN NO_DATA_FOUND THEN
 DBMS_OUTPUT.PUT_LINE('DEPARTAMENTO NO ENCONTRADO');
END;

--CON PARAMETROS
CREATE OR REPLACE PROCEDURE PRUEBA (NUM NUMBER, LUGAR VARCHAR2)
AS
V_REG_DEPART DEPART%ROWTYPE;
BEGIN
 SELECT * INTO V_REG_DEPART FROM DEPART WHERE DEPT_NO=NUM AND LOC=LUGAR;
 DBMS_OUTPUT.PUT_LINE('EL DEPARTAMENTO es: '||V_REG_DEPART.DEPT_NO||'
  '||V_REG_DEPART.DNOMBRE||' '||V_REG_DEPART.LOC);
EXCEPTION
 WHEN NO_DATA_FOUND THEN
 DBMS_OUTPUT.PUT_LINE('DEPARTAMENTO NO ENCONTRADO');
END;

--
CREATE OR REPLACE PROCEDURE PRUEBA (NOMBRE VARCHAR2)
AS
V_REG_DEPART EMPLE%ROWTYPE;

BEGIN
 UPDATE EMPLE
  SET SALARIO = SALARIO * 1.15 
  WHERE APELLIDO = NOMBRE;

 SELECT * INTO V_REG_DEPART FROM EMPLE WHERE APELLIDO=NOMBRE;
 DBMS_OUTPUT.PUT_LINE('EL SALARIO ACTUAL DE '||V_REG_DEPART.APELLIDO||' ES '||V_REG_DEPART.SALARIO);
EXCEPTION
 WHEN NO_DATA_FOUND THEN
 DBMS_OUTPUT.PUT_LINE('EMPLEADO NO ENCONTRADO');
 WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('ERROR');
END;




--CON DOS VARIABLES.EWXI
CREATE OR REPLACE PROCEDURE PRUEBA (NOMBRE VARCHAR2)
AS
V_REG_DEPART EMPLE%ROWTYPE;
V_SAL_ANTIGUO NUMBER(4);

BEGIN
 SELECT SALARIO INTO V_SAL_ANTIGUO FROM EMPLE WHERE APELLIDO = NOMBRE;

 UPDATE EMPLE
  SET SALARIO = SALARIO * 1.15 
  WHERE APELLIDO = NOMBRE;

 SELECT * INTO V_REG_DEPART FROM EMPLE WHERE APELLIDO=NOMBRE;
 DBMS_OUTPUT.PUT_LINE('EL SALARIO ANTERIOR DE '||V_REG_DEPART.APELLIDO||' ERA '|| V_SAL_ANTIGUO || ' Y AHORA ES '||V_REG_DEPART.SALARIO);
EXCEPTION
 WHEN NO_DATA_FOUND THEN
 DBMS_OUTPUT.PUT_LINE('EMPLEADO NO ENCONTRADO');
 WHEN OTHERS THEN
 DBMS_OUTPUT.PUT_LINE('ERROR');
END;


--Ejercicio con condicion
CREATE OR REPLACE
PROCEDURE AUMENTO
(EMP NUMBER, SAL NUMBER)
 AS
  V_ANT EMPLE.SALARIO%TYPE;
 BEGIN
  SELECT SALARIO INTO V_ANT 
  FROM EMPLE
  WHERE EMP_NO = EMP ;
  IF ((SAL-V_ANT) < V_ANT*0.05 ) THEN
  UPDATE EMPLE SET SALARIO = SAL 
  WHERE EMP_NO=EMP;
 ELSE
   DBMS_OUTPUT.PUT_LINE('VALOR NUEVO DE SALARIO NO VALIDO');
 END IF;

 EXCEPTION
  WHEN NO_DATA_FOUND THEN
   DBMS_OUTPUT.PUT_LINE('NO SE ENCONTRO EL EMPLEDO  EMP_NO');
  END modificar_precio_producto;