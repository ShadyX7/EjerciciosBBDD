1.- Crea un procedimiento que a través del cod_centro de un centro nos muestra:

a) Todos los datos del centro.
b) El número de profesores que tiene ese centro.

CREATE OR REPLACE PROCEDURE EJERCICIO1_CENTRO(CODCENTRO1 NUMBER)

AS

V_REG CENTROS%ROWTYPE;
NUMPROF NUMBER(2);

BEGIN

SELECT * INTO V_REG FROM CENTROS WHERE COD_CENTRO = CODCENTRO1;

SELECT COUNT(*) INTO NUMPROF FROM PROFESORES WHERE COD_CENTRO = CODCENTRO1;

DBMS_OUTPUT.PUT_LINE(V_REG.COD_CENTRO||' '||V_REG.TIPO_CENTRO||' '||
V_REG.NOMBRE||' '||V_REG.DIRECCION||' '||V_REG.TELEFONO||' '||V_REG.NUM_PLAZAS);

DBMS_OUTPUT.PUT_LINE('EL NUMERO DE PROFESORES ES: '|| NUMPROF);

EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('EL CODIGO DEL CENTRO NO SE ENCONTRO');
END EJERCICIO1_CENTRO;




2.- Crea un procedimiento que muestre la facturación de los artículos de un fabricante concreto.
Este recibe como parámetro el código del fabricante.

CREATE OR REPLACE PROCEDURE EJ_FACTURACION_2(COD_FABRIC NUMBER)

AS

VAR_FACT NUMBER(6);

BEGIN

SELECT SUM(UNIDADES_VENDIDAS*PRECIO_VENTA) INTO VAR_FACT FROM ARTICULOS A, VENTAS V 
WHERE A.ARTICULO=V.ARTICULO AND A.COD_FABRICANTE=V.COD_FABRICANTE 
AND A.COD_FABRICANTE=COD_FABRIC AND A.PESO=V.PESO AND A.CATEGORIA=V.CATEGORIA 
GROUP BY A.COD_FABRICANTE;

DBMS_OUTPUT.PUT_LINE('EL FABRICANTE A FACTURADO '|| VAR_FACT);

EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('DEPARTAMENTO NO LOCALIZADO');

END EJ_FACTURACION_2;



3.- Crea un procedimiento que recibe los datos de un pedido y realiza las siguientes acciones:

a) Comprueba que el artículo existe en la tabla artículos.

b) Comprueba que la tienda existe en la tabla tiendas.

c) Si las unidades del pedido es superior a la de la venta, sólo asigna al pedido el 20% de las existencias.

d) La fecha de pedido es la actual.

e) Una vez insertado el pedido resta las unidades pedidas a las existencias del artículo.


CREATE OR REPLACE PROCEDURE EJERCICIO_2_3(N VARCHAR2, ART VARCHAR2, COD NUMBER, 
PES NUMBER, CAT VARCHAR2, UNID NUMBER, FECHA DATE DEFAULT SYSDATE)

AS

V_ART NUMBER(2);
V_NIF NUMBER(2);
V_EXIST NUMBER(4);
V_UNI NUMBER(3);

BEGIN

SELECT COUNT(*) INTO V_ART FROM ARTICULOS WHERE ARTICULO=ART 
AND PESO=PES AND COD_FABRICANTE=COD AND CATEGORIA=CAT;

SELECT COUNT(*) INTO V_NIF FROM TIENDAS WHERE NIF=N;

IF (V_ART=1 AND V_NIF=1) THEN

SELECT EXISTENCIAS INTO V_EXIST FROM ARTICULOS WHERE ARTICULO=ART 
AND PESO=PES AND COD_FABRICANTE=COD AND CATEGORIA=CAT;

IF (V_EXIST<UNID) THEN
V_UNI:=TRUNC(V_EXIST*0.2);

ELSE

V_UNI:=UNID;
END IF;

INSERT INTO PEDIDOS VALUES (N, ART, COD, PES, CAT, FECHA, V_UNI);
UPDATE ARTICULOS SET EXISTENCIAS = EXISTENCIAS-V_UNI WHERE ARTICULO=ART
AND PESO=PES AND COD_FABRICANTE = COD AND CATEGORIA=CAT;

ELSE

DBMS_OUTPUT.PUT_LINE('LAS EXISTENCIAS DEL ARTICULO NO EXISTEN');
END IF;

EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('ERROR');
END EJERCICIO_2_3;











